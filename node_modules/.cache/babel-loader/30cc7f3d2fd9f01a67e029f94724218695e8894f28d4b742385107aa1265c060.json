{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for logging (helpful for debugging during interview)\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`🚀 API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('❌ Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => {\n  var _response$config$meth;\n  console.log(`✅ API Response: ${(_response$config$meth = response.config.method) === null || _response$config$meth === void 0 ? void 0 : _response$config$meth.toUpperCase()} ${response.config.url}`, response.status);\n  return response;\n}, error => {\n  var _error$response;\n  console.error('❌ Response Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// Task API endpoints\nexport const getTasks = () => api.get('/tasks');\nexport const createTask = taskData => api.post('/tasks', taskData);\nexport const updateTask = (id, taskData) => api.put(`/tasks/${id}`, taskData);\nexport const deleteTask = id => api.delete(`/tasks/${id}`);\n\n// User API endpoints\nexport const getUsers = () => api.get('/users');\nexport const createUser = userData => api.post('/users', userData);\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","_response$config$meth","status","_error$response","data","message","getTasks","get","createTask","taskData","post","updateTask","id","put","deleteTask","delete","getUsers","createUser","userData"],"sources":["/Users/edwardhunt/Desktop/Atco-Projects/junior developer/testApp/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor for logging (helpful for debugging during interview)\napi.interceptors.request.use(\n  (config) => {\n    console.log(`🚀 API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('❌ Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    console.log(`✅ API Response: ${response.config.method?.toUpperCase()} ${response.config.url}`, response.status);\n    return response;\n  },\n  (error) => {\n    console.error('❌ Response Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\n// Task API endpoints\nexport const getTasks = () => api.get('/tasks');\n\nexport const createTask = (taskData) => api.post('/tasks', taskData);\n\nexport const updateTask = (id, taskData) => api.put(`/tasks/${id}`, taskData);\n\nexport const deleteTask = (id) => api.delete(`/tasks/${id}`);\n\n// User API endpoints\nexport const getUsers = () => api.get('/users');\n\nexport const createUser = (userData) => api.post('/users', userData);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACVC,OAAO,CAACC,GAAG,CAAC,oBAAAF,cAAA,GAAmBD,MAAM,CAACI,MAAM,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,IAAIL,MAAM,CAACM,GAAG,EAAE,CAAC;EAC5E,OAAON,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACTL,OAAO,CAACK,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EACxC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAd,GAAG,CAACI,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAK;EAAA,IAAAC,qBAAA;EACZT,OAAO,CAACC,GAAG,CAAC,oBAAAQ,qBAAA,GAAmBD,QAAQ,CAACV,MAAM,CAACI,MAAM,cAAAO,qBAAA,uBAAtBA,qBAAA,CAAwBN,WAAW,CAAC,CAAC,IAAIK,QAAQ,CAACV,MAAM,CAACM,GAAG,EAAE,EAAEI,QAAQ,CAACE,MAAM,CAAC;EAC/G,OAAOF,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAM,eAAA;EACTX,OAAO,CAACK,KAAK,CAAC,mBAAmB,EAAE,EAAAM,eAAA,GAAAN,KAAK,CAACG,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBC,IAAI,KAAIP,KAAK,CAACQ,OAAO,CAAC;EACzE,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMS,QAAQ,GAAGA,CAAA,KAAMvB,GAAG,CAACwB,GAAG,CAAC,QAAQ,CAAC;AAE/C,OAAO,MAAMC,UAAU,GAAIC,QAAQ,IAAK1B,GAAG,CAAC2B,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;AAEpE,OAAO,MAAME,UAAU,GAAGA,CAACC,EAAE,EAAEH,QAAQ,KAAK1B,GAAG,CAAC8B,GAAG,CAAC,UAAUD,EAAE,EAAE,EAAEH,QAAQ,CAAC;AAE7E,OAAO,MAAMK,UAAU,GAAIF,EAAE,IAAK7B,GAAG,CAACgC,MAAM,CAAC,UAAUH,EAAE,EAAE,CAAC;;AAE5D;AACA,OAAO,MAAMI,QAAQ,GAAGA,CAAA,KAAMjC,GAAG,CAACwB,GAAG,CAAC,QAAQ,CAAC;AAE/C,OAAO,MAAMU,UAAU,GAAIC,QAAQ,IAAKnC,GAAG,CAAC2B,IAAI,CAAC,QAAQ,EAAEQ,QAAQ,CAAC;AAEpE,eAAenC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}