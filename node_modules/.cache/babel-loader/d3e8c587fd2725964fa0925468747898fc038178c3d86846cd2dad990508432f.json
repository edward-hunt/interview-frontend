{"ast":null,"code":"var _jsxFileName = \"/Users/edwardhunt/Desktop/Atco-Projects/junior developer/testApp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport TaskCard from './components/TaskCard';\nimport TaskForm from './components/TaskForm';\nimport { getTasks, createTask } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      setLoading(true);\n      const response = await getTasks();\n      setTasks(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch tasks. Make sure the backend is running.');\n      console.error('Error fetching tasks:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateTask = async taskData => {\n    try {\n      const response = await createTask(taskData);\n      setTasks([...tasks, response.data]);\n      return true;\n    } catch (err) {\n      console.error('Error creating task:', err);\n      return false;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Interview Coding Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f8d7da',\n        color: '#721c24',\n        padding: '1rem',\n        borderRadius: '4px',\n        marginBottom: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSubmit: handleCreateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-grid\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        task: task,\n        onUpdate: fetchTasks\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), tasks.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        color: '#666'\n      },\n      children: \"No tasks found. Create your first task above!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskCard","TaskForm","getTasks","createTask","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","loading","setLoading","error","setError","fetchTasks","response","data","err","console","handleCreateTask","taskData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","color","padding","borderRadius","marginBottom","onSubmit","map","task","onUpdate","_id","length","textAlign","_c","$RefreshReg$"],"sources":["/Users/edwardhunt/Desktop/Atco-Projects/junior developer/testApp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport TaskCard from './components/TaskCard';\nimport TaskForm from './components/TaskForm';\nimport { getTasks, createTask } from './services/api';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      setLoading(true);\n      const response = await getTasks();\n      setTasks(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch tasks. Make sure the backend is running.');\n      console.error('Error fetching tasks:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateTask = async (taskData) => {\n    try {\n      const response = await createTask(taskData);\n      setTasks([...tasks, response.data]);\n      return true;\n    } catch (err) {\n      console.error('Error creating task:', err);\n      return false;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1>Loading...</h1>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>Task Management System</h1>\n        <p>Interview Coding Challenge</p>\n      </div>\n\n      {error && (\n        <div style={{ \n          backgroundColor: '#f8d7da', \n          color: '#721c24', \n          padding: '1rem', \n          borderRadius: '4px', \n          marginBottom: '1rem' \n        }}>\n          {error}\n        </div>\n      )}\n\n      <TaskForm onSubmit={handleCreateTask} />\n\n      <div className=\"task-grid\">\n        {tasks.map(task => (\n          <TaskCard \n            key={task._id} \n            task={task} \n            onUpdate={fetchTasks}\n          />\n        ))}\n      </div>\n\n      {tasks.length === 0 && !loading && (\n        <div style={{ textAlign: 'center', color: '#666' }}>\n          No tasks found. Create your first task above!\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}